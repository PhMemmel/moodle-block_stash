{"version":3,"file":"swap.min.js","sources":["../src/swap.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User swap code\n *\n * @copyright  2019 Adrian Greeve - adriangreeve.com\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from 'core/str';\n\nconst showModal = async(e) => {\n    let swapbtn = e.currentTarget;\n    let courseid = swapbtn.getAttribute('data-courseid');\n    let userid = swapbtn.getAttribute('data-userid');\n    let myuserid = swapbtn.getAttribute('data-myuserid');\n    let [userstash, mystash] = await Promise.all([getUserStash(courseid, userid), getUserStash(courseid, myuserid)])\n        .catch(() => {\n            addToast(getString('noitemstotrade', 'block_stash'), {\n                type: 'warning',\n                autohide: true,\n                closeButton: true,\n            });\n            return [];\n        });\n\n    if (mystash.length == 0) {\n        return;\n    }\n\n    const modal = await buildModal(courseid, userstash, mystash, userid, myuserid);\n    displayModal(modal);\n};\n\nconst buildModal = async(courseid, userstash, mystash, userid, myuserid) => {\n    let context = {\n            courseid: courseid,\n            yourstash: userstash,\n            mystash: mystash,\n            userid: userid,\n            myuserid: myuserid\n    };\n    return ModalFactory.create({\n        title: getString('createtrade', 'block_stash'),\n        body: Templates.render('block_stash/local/swap/swap_form', context),\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n};\n\nconst displayModal = async(modal) => {\n    let savetext = getString('sendtraderequest', 'block_stash');\n    modal.setSaveButtonText(savetext);\n    modal.getRoot().on(ModalEvents.save, () => {\n        // Do stuff here.\n\n        let myitems = [];\n        let youritems = [];\n\n        let swapitems = document.getElementsByClassName('block-stash-quantity');\n        Object.entries(swapitems).forEach((item) => {\n            if (item[1].getAttribute('data-select-type') == 'your-items') {\n                youritems.push({id: item[1].getAttribute('data-itemid'), quantity: item[1].value});\n            } else {\n                myitems.push({id: item[1].getAttribute('data-itemid'), quantity: item[1].value});\n            }\n        });\n\n        let formelement = document.querySelector('form');\n        let courseid = formelement.getAttribute('data-courseid');\n        let userid = formelement.getAttribute('data-userid');\n        let myuserid = formelement.getAttribute('data-myuserid');\n\n        submitSwap(userid, myuserid, courseid, youritems, myitems);\n        modal.destroy();\n\n    });\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n\n    modal.show();\n};\n\nconst submitSwap = (userid, myuserid, courseid, items, myitems) => {\n        return Ajax.call([{\n            methodname: 'block_stash_create_swap_request',\n            args: {\n                userid: userid,\n                myuserid: myuserid,\n                courseid: courseid,\n                items: items,\n                myitems: myitems\n            }\n        }])[0].then((allitems) => {\n            addToast(getString('requestsent', 'block_stash'), {\n                type: 'info',\n                autohide: true,\n                closeButton: true,\n            });\n            return allitems;\n        });\n};\n\n\nconst getUserStash = (courseid, userid) => {\n    return Ajax.call([{\n        methodname: 'block_stash_get_user_stash_items',\n        args: {\n            courseid: courseid,\n            userid: userid\n        }\n    }])[0].then((allitems) => {\n        return allitems;\n    });\n};\n\nexport const init = () => {\n    let swapbtns = document.querySelectorAll('[data-swap]');\n    for (let swapbtn of swapbtns) {\n        swapbtn.addEventListener('click', showModal);\n    }\n};\n"],"names":["showModal","async","swapbtn","e","currentTarget","courseid","getAttribute","userid","myuserid","userstash","mystash","Promise","all","getUserStash","catch","type","autohide","closeButton","length","modal","buildModal","displayModal","context","yourstash","ModalFactory","create","title","body","Templates","render","types","SAVE_CANCEL","savetext","setSaveButtonText","getRoot","on","ModalEvents","save","myitems","youritems","swapitems","document","getElementsByClassName","Object","entries","forEach","item","push","id","quantity","value","formelement","querySelector","submitSwap","destroy","hidden","show","items","Ajax","call","methodname","args","then","allitems","swapbtns","querySelectorAll","addEventListener"],"mappings":";;;;;;oRA6BMA,UAAYC,MAAAA,QACVC,QAAUC,EAAEC,cACZC,SAAWH,QAAQI,aAAa,iBAChCC,OAASL,QAAQI,aAAa,eAC9BE,SAAWN,QAAQI,aAAa,kBAC/BG,UAAWC,eAAiBC,QAAQC,IAAI,CAACC,aAAaR,SAAUE,QAASM,aAAaR,SAAUG,YAChGM,OAAM,qBACM,mBAAU,iBAAkB,eAAgB,CACjDC,KAAM,UACNC,UAAU,EACVC,aAAa,IAEV,SAGO,GAAlBP,QAAQQ,oBAINC,YAAcC,WAAWf,SAAUI,UAAWC,QAASH,OAAQC,UACrEa,aAAaF,QAGXC,WAAanB,MAAMI,SAAUI,UAAWC,QAASH,OAAQC,gBACvDc,QAAU,CACNjB,SAAUA,SACVkB,UAAWd,UACXC,QAASA,QACTH,OAAQA,OACRC,SAAUA,iBAEXgB,uBAAaC,OAAO,CACvBC,OAAO,mBAAU,cAAe,eAChCC,KAAMC,mBAAUC,OAAO,mCAAoCP,SAC3DP,KAAMS,uBAAaM,MAAMC,eAI3BV,aAAepB,MAAAA,YACb+B,UAAW,mBAAU,mBAAoB,eAC7Cb,MAAMc,kBAAkBD,UACxBb,MAAMe,UAAUC,GAAGC,sBAAYC,MAAM,SAG7BC,QAAU,GACVC,UAAY,GAEZC,UAAYC,SAASC,uBAAuB,wBAChDC,OAAOC,QAAQJ,WAAWK,SAASC,OACiB,cAA5CA,KAAK,GAAGxC,aAAa,oBACrBiC,UAAUQ,KAAK,CAACC,GAAIF,KAAK,GAAGxC,aAAa,eAAgB2C,SAAUH,KAAK,GAAGI,QAE3EZ,QAAQS,KAAK,CAACC,GAAIF,KAAK,GAAGxC,aAAa,eAAgB2C,SAAUH,KAAK,GAAGI,eAI7EC,YAAcV,SAASW,cAAc,QACrC/C,SAAW8C,YAAY7C,aAAa,iBACpCC,OAAS4C,YAAY7C,aAAa,eAClCE,SAAW2C,YAAY7C,aAAa,iBAExC+C,WAAW9C,OAAQC,SAAUH,SAAUkC,UAAWD,SAClDnB,MAAMmC,aAIVnC,MAAMe,UAAUC,GAAGC,sBAAYmB,QAAQ,KACnCpC,MAAMmC,aAGVnC,MAAMqC,QAGJH,WAAa,CAAC9C,OAAQC,SAAUH,SAAUoD,MAAOnB,UACxCoB,cAAKC,KAAK,CAAC,CACdC,WAAY,kCACZC,KAAM,CACFtD,OAAQA,OACRC,SAAUA,SACVH,SAAUA,SACVoD,MAAOA,MACPnB,QAASA,YAEb,GAAGwB,MAAMC,2BACA,mBAAU,cAAe,eAAgB,CAC9ChD,KAAM,OACNC,UAAU,EACVC,aAAa,IAEV8C,YAKblD,aAAe,CAACR,SAAUE,SACrBmD,cAAKC,KAAK,CAAC,CACdC,WAAY,mCACZC,KAAM,CACFxD,SAAUA,SACVE,OAAQA,WAEZ,GAAGuD,MAAMC,UACFA,yBAIK,SACZC,SAAWvB,SAASwB,iBAAiB,mBACpC,IAAI/D,WAAW8D,SAChB9D,QAAQgE,iBAAiB,QAASlE"}