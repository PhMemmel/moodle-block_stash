{"version":3,"file":"add-item.min.js","sources":["../src/add-item.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add items to a table.\n *\n * @copyright 2019 Adrian Greeve <adriangreeve.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\n\nconst addItem = (e) => {\n    e.preventDefault();\n\n    let addbtn = e.currentTarget;\n\n    let selectedtype = addbtn.getAttribute('data-add-item');\n    let selectedobject = document.getElementById(selectedtype);\n    let optionelement = selectedobject.options[selectedobject.selectedIndex];\n    let context = {\n        id: optionelement.getAttribute('data-itemid'),\n        itemid: optionelement.getAttribute('data-itemid'),\n        name: optionelement.innerText,\n        imageurl: optionelement.getAttribute('data-imgurl'),\n        useritemid: optionelement.value,\n        quantity: optionelement.getAttribute('data-amount'),\n        selecttype: selectedtype\n    };\n\n    let tableelement = document.querySelector('table[data-type=\"' + selectedtype + '\"]');\n    Templates.render('block_stash/add_item_detail', context).then((html, js) => {\n        if (tableelement.getAttribute('data-status') == 'empty') {\n            Templates.replaceNodeContents(tableelement, html, js);\n            tableelement.setAttribute('data-status', 'thing');\n        } else {\n            Templates.appendNodeContents(tableelement, html, js);\n        }\n        registerItemElementEvents();\n    });\n};\n\nconst registerItemElementEvents = () => {\n    let deleteButtons = document.getElementsByClassName('block-stash-delete-item');\n    deleteButtons.forEach((deleteButton) => {\n        deleteButton.addEventListener('click', deleteItem);\n    });\n};\n\nconst deleteItem = (e) => {\n    let itemelement = e.currentTarget;\n    let fullelement = itemelement.parentNode.parentNode;\n    fullelement.remove();\n};\n\nexport const init = () => {\n    let addbtns = document.querySelectorAll('[data-add-item]');\n    addbtns.forEach((addbutton) => {\n        addbutton.addEventListener('click', addItem);\n    });\n};\n"],"names":["addItem","e","preventDefault","selectedtype","currentTarget","getAttribute","selectedobject","document","getElementById","optionelement","options","selectedIndex","context","id","itemid","name","innerText","imageurl","useritemid","value","quantity","selecttype","tableelement","querySelector","render","then","html","js","replaceNodeContents","setAttribute","appendNodeContents","registerItemElementEvents","getElementsByClassName","forEach","deleteButton","addEventListener","deleteItem","parentNode","remove","querySelectorAll","addbutton"],"mappings":";;;;;;sJAwBMA,QAAWC,IACbA,EAAEC,qBAIEC,aAFSF,EAAEG,cAEWC,aAAa,iBACnCC,eAAiBC,SAASC,eAAeL,cACzCM,cAAgBH,eAAeI,QAAQJ,eAAeK,eACtDC,QAAU,CACVC,GAAIJ,cAAcJ,aAAa,eAC/BS,OAAQL,cAAcJ,aAAa,eACnCU,KAAMN,cAAcO,UACpBC,SAAUR,cAAcJ,aAAa,eACrCa,WAAYT,cAAcU,MAC1BC,SAAUX,cAAcJ,aAAa,eACrCgB,WAAYlB,cAGZmB,aAAef,SAASgB,cAAc,oBAAsBpB,aAAe,yBACrEqB,OAAO,8BAA+BZ,SAASa,MAAK,CAACC,KAAMC,MACjB,SAA5CL,aAAajB,aAAa,mCAChBuB,oBAAoBN,aAAcI,KAAMC,IAClDL,aAAaO,aAAa,cAAe,6BAE/BC,mBAAmBR,aAAcI,KAAMC,IAErDI,gCAIFA,0BAA4B,KACVxB,SAASyB,uBAAuB,2BACtCC,SAASC,eACnBA,aAAaC,iBAAiB,QAASC,gBAIzCA,WAAcnC,IACEA,EAAEG,cACUiC,WAAWA,WAC7BC,wBAGI,KACF/B,SAASgC,iBAAiB,mBAChCN,SAASO,YACbA,UAAUL,iBAAiB,QAASnC"}